(window.webpackJsonp=window.webpackJsonp||[]).push([[240],{510:function(e,t,a){"use strict";a.r(t);var o=a(49),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"debug-komodo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debug-komodo"}},[e._v("#")]),e._v(" Debug Komodo")]),e._v(" "),a("p",[e._v("To run Komodo in debug mode, and help developers troubleshoot issues, please follow these steps:")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),a("p",[e._v("These steps are including notary node references in komodod command, but in case you are not a notary node, you don't need to include those command parameters.")])]),e._v(" "),a("h2",{attrs:{id:"prerequisite-is-to-install-gdb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisite-is-to-install-gdb"}},[e._v("#")]),e._v(" Prerequisite is to install gdb")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt-get")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" gdb\n")])])]),a("h2",{attrs:{id:"run-komodo-daemon-with-gdb-tool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-komodo-daemon-with-gdb-tool"}},[e._v("#")]),e._v(" Run Komodo daemon with "),a("code",[e._v("gdb")]),e._v(" tool")]),e._v(" "),a("p",[e._v("Just add the command "),a("code",[e._v("gdb -args")]),e._v(" before the launch parameters for the daemon.")]),e._v(" "),a("p",[e._v("If you normally start the daemon using the command "),a("code",[e._v('./src/komodod -gen -genproclimit=2 -notary -pubkey="03af2412ebf9517a43d192193490476fd0a44312c70755e07eb03b6d71338ebc9d"')]),e._v(", then to get a backtrace from it, execute:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("gdb -args  ./src/komodod -gen -genproclimit"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" -notary -pubkey"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"03af2412ebf9517a43d192193490476fd0a44312c70755e07eb03b6d71338ebc9d"')]),e._v("\n")])])]),a("p",[a("em",[e._v("If you have trouble getting it started, try using the full path to the executable.")])]),e._v(" "),a("p",[e._v("The above command initializes debugging.")]),e._v(" "),a("p",[e._v("Once you see the "),a("code",[e._v("gdb>")]),e._v(" command prompt, type "),a("code",[e._v("run")]),e._v(" to start komodo in debug mode.")]),e._v(" "),a("h2",{attrs:{id:"getting-backtrace-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-backtrace-data"}},[e._v("#")]),e._v(" Getting backtrace data")]),e._v(" "),a("p",[e._v("When the daemon crashes, either by itself or after you issue a RPC command, you'll see a "),a("code",[e._v("gdb>")]),e._v(" prompt again along with some output from the "),a("code",[e._v("komodod")]),e._v(" daemon itself.")]),e._v(" "),a("p",[e._v("Type "),a("code",[e._v("backtrace")]),e._v(" and and it will output debug information that must be shared with a developer.")])])}),[],!1,null,null,null);t.default=s.exports}}]);